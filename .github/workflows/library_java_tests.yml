# This workflow performs tests in Java.
name: Library Java tests

on:
  workflow_call:
    inputs:
      dafny:
        description: 'The Dafny version to run'
        required: true
        type: string

jobs:
  testJava:
    strategy:
      matrix:
        library: [
          AwsCryptographyPrimitives,
          ComAmazonawsKms,
          ComAmazonawsDynamodb,
          AwsCryptographicMaterialProviders,
          TestVectorsAwsCryptographicMaterialProviders,
          StandardLibrary,
        ]
        os: [
          # TODO just test on mac for now
          # windows-latest,
          ubuntu-latest,
          macos-latest
        ]
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Support longpaths on Git checkout
        run: |
          git config --global core.longpaths true
      # KMS and MPL tests need to use credentials which can call KMS
      - name: Configure AWS Credentials for Tests
        uses: aws-actions/configure-aws-credentials@v2
        if: matrix.library == 'ComAmazonawsKms' || matrix.library == 'ComAmazonawsDynamodb' || matrix.library == 'AwsCryptographicMaterialProviders' || matrix.library == 'TestVectorsAwsCryptographicMaterialProviders'
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::370957321024:role/GitHub-CI-MPL-Dafny-Role-us-west-2
          role-session-name: JavaTests

      - uses: actions/checkout@v4
      # The specification submodule is private so we don't have access, but we don't need
      # it to verify the Dafny code. Instead we manually pull the submodule we DO need.
      - run: git submodule update --init libraries

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.6.1
        with:
          dafny-version: ${{ inputs.dafny }}

      - name: Setup Java 8
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version:  8

      - name: Build ${{ matrix.library }} implementation
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make build_java CORES=$CORES

      - name: Test ${{ matrix.library }}
        working-directory: ./${{ matrix.library }}
        run: |
          make test_java

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 11

      - name: Clean for next Java
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean
          build-root-directory: ./${{ matrix.library }}/runtimes/java          
          
      - name: Compile Java 11
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          build-root-directory: ./${{ matrix.library }}/runtimes/java

      - name: Test Java 11
        uses: gradle/gradle-build-action@v2
        with:
          arguments: runTests
          build-root-directory: ./${{ matrix.library }}/runtimes/java
            
      - name: Setup Java 16
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 16

      - name: Clean for next Java
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean
          build-root-directory: ./${{ matrix.library }}/runtimes/java

      - name: Compile Java 16
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          build-root-directory: ./${{ matrix.library }}/runtimes/java

      - name: Test Java 16
        uses: gradle/gradle-build-action@v2
        with:
          arguments: runTests
          build-root-directory: ./${{ matrix.library }}/runtimes/java     
            
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Clean for next Java
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean
          build-root-directory: ./${{ matrix.library }}/runtimes/java

      - name: Compile Java 17
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
          build-root-directory: ./${{ matrix.library }}/runtimes/java

      - name: Test Java 17
        uses: gradle/gradle-build-action@v2
        with:
          arguments: runTests
          build-root-directory: ./${{ matrix.library }}/runtimes/java      

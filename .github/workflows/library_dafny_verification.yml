# This workflow performs static analysis checks.
name: Library Dafny verification

on:
  workflow_call:
    inputs:
      dafny:
        description: 'The Dafny version to run'
        required: true
        type: string
jobs:
  verification:
    strategy:
      matrix:
        library: [
          TestVectorsAwsCryptographicMaterialProviders,
          AwsCryptographyPrimitives,
          ComAmazonawsKms,
          ComAmazonawsDynamodb,
          AwsCryptographicMaterialProviders, 
          StandardLibrary,
        ]
        os: [ macos-latest-large ]
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    steps:
      - name: Support longpaths
        run: |
          git config --global core.longpaths true

      - uses: actions/checkout@v4
      # The specification submodule is private so we don't have access, but we don't need
      # it to verify the Dafny code. Instead we manually pull the submodule we DO need.
      - run: git submodule update --init libraries

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.6.1
        with:
          dafny-version: ${{ inputs.dafny }}

      # dafny-reportgenerator requires next6
      # but only 7.0 is installed on macos-latest-large
      - name: Setup .NET Core SDK '6.0.x'
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Verify ${{ matrix.library }} Dafny code
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make verify CORES=$CORES

      - name: Check solver resource use
        if: success() || failure()
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          make dafny-reportgenerator
